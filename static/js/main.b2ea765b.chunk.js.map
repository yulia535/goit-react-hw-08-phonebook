{"version":3,"sources":["redux/phonebook/actions.js","redux/auth/auth-operations.js","redux/auth/auth-action.js","redux/phonebook/reducer.js","redux/auth/auth-reducer.js","redux/store.js","redux/auth/auth-selectors.js","components/UserMenu/Navigation.js","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/UserMenu/PrivateRouter.js","components/UserMenu/PublikRouter.js","App.js","index.js"],"names":["fatchContactRequest","createAction","fatchContactSuccess","fatchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","chengeFilter","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","login","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","items","createReducer","_","payload","state","action","filter","id","loading","combineReducers","initialUserState","name","email","user","error","isLogin","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","isAuthenticated","authSelectors","to","exact","style","activeStyle","container","alignItems","marginRight","mapDispatchToProps","onLogout","authOperations","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2ea765b.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fatchContactRequest = createAction('phonebook/fatchContactRequest');\r\nexport const fatchContactSuccess = createAction('phonebook/fatchContactSuccess');\r\nexport const fatchContactError = createAction('phonebook/fatchContactError');\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\r\nexport const addContactError = createAction('phonebook/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccess');\r\nexport const deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nexport const chengeFilter = createAction('phonebook/filter');\r\n\r\n\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError\r\n\r\n} from './auth-action'\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/'\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset(){\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(registerRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials)\r\n        token.set(response.data.token)\r\n        dispatch(registerSuccess(response.data))\r\n    }catch(error){dispatch(registerError(error.message ))}\r\n};\r\n\r\nconst login = credentials => async dispatch => {\r\n    dispatch(loginRequest())\r\n\r\n    try {\r\n        const response = await axios.post('/users/login', credentials)\r\n        token.set(response.data.token)\r\n        dispatch(loginSuccess(response.data))\r\n    }catch(error){dispatch(loginError(error.message ))}\r\n    \r\n}\r\n\r\nconst logOut = () => async dispatch => {\r\n    dispatch(logoutRequest())\r\n    \r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(logoutSuccess());\r\n    }catch(error){dispatch(logoutError(error.message ))}\r\n}\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n        \r\n    } = getState();\r\n    //state.auth.token\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n    token.set(persistedToken);\r\n    dispatch(getCurrentUserRequest())\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n        dispatch(getCurrentUserSuccess((response.data)))\r\n\r\n    }catch(error){dispatch(getCurrentUserError(error.message ))}\r\n\r\n }\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    register,\r\n    login,\r\n    logOut,\r\n    getCurrentUser\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');","import { combineReducers } from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fatchContactRequest,\r\n    fatchContactSuccess,\r\n    fatchContactError,\r\n    chengeFilter\r\n \r\n\r\n} from './actions'\r\n\r\n\r\n// const addContacts = (state, action) => {\r\n//     const normalizedData = action.payload.name.toLowerCase();\r\n    \r\n//         const iterateName = state.find(contact =>\r\n//             contact.name.toLowerCase().includes(normalizedData),\r\n//         );\r\n//         if (iterateName === undefined) {\r\n//             return [...state, action.payload];\r\n//         } else {\r\n//             alert(`${iterateName.name} is already in contacts`);\r\n//             return state;\r\n//         }\r\n// };\r\n      \r\nconst items = createReducer([], {\r\n    [fatchContactSuccess]: (_, {payload}) => payload,\r\n    [addContactSuccess]:(state, {payload}) => [...state, payload ],\r\n    [deleteContactSuccess]:(state, action) => state.filter(({id}) => id !== action.payload)\r\n})\r\nconst filter = createReducer('', {\r\n    [chengeFilter]: (_, action) => action.payload,\r\n})\r\nconst loading = createReducer(false, {\r\n    [fatchContactRequest]:() => true,\r\n    [fatchContactSuccess]: () => false,\r\n    [fatchContactError]:() => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n\r\n\r\n})\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n})\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    registerSuccess,\r\n    registerError,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutSuccess,\r\n    logoutError,\r\n     getCurrentUserSuccess,\r\n    getCurrentUserError\r\n} from './auth-action'\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [registerSuccess]: (_, { payload }) => payload.user,\r\n    [loginSuccess]: (_, { payload }) => payload.user,\r\n    [logoutSuccess]: () => initialUserState,\r\n    [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n    \r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [registerSuccess]: (_, { payload }) => payload.token,\r\n    [loginSuccess]: (_, { payload }) => payload.token,\r\n    [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [registerError]: (_, { payload }) => payload,\r\n    [loginError]: (_, { payload }) => payload,\r\n    [logoutError]: (_, { payload }) => payload,\r\n    [getCurrentUserError]:(_, { payload }) => payload,\r\n});\r\n\r\nconst isLogin = createReducer(false, {\r\n    [registerSuccess]: () => true,\r\n    [loginSuccess]: () => true,\r\n    [getCurrentUserSuccess]: () => true,\r\n    [registerError]: () => false,\r\n    [loginError]: () => false,\r\n    [logoutError]: () => false,\r\n    [getCurrentUserError]: () => false,\r\n    [logoutSuccess]:() => false,\r\n    \r\n     \r\n})\r\n\r\nexport default combineReducers({\r\n    user, isLogin, token, error,\r\n})","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport contactsReducer from './phonebook/reducer';\r\nimport authReducer from './auth/auth-reducer';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n}), logger];\r\n  \r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist:['token'],\r\n}\r\n\r\n\r\n \r\nconst store = configureStore({\r\n    reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer)\r\n  },\r\n  \r\n    devTools: process.env.NODE_ENV !== 'production',\r\n    middleware,\r\n})\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};","/* eslint-disable import/no-anonymous-default-export */\r\nconst getIsAuthenticated = state => state.auth.isLogin;\r\n\r\nconst getCurrentEmail = state => state.auth.user.email\r\n\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getCurrentEmail\r\n}","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authSelectors from '..//../redux/auth/auth-selectors'\r\nimport { connect } from 'react-redux';\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n//{isAuthenticated}\r\nconst Navigation = ({isAuthenticated}) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated &&\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Contacts\r\n    </NavLink>}\r\n    \r\n  </nav>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n//export default Navigation;\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import { connect } from \"react-redux\";\r\nimport authSelectors from '..//../redux/auth/auth-selectors';\r\nimport authOperations from '..//../redux/auth/auth-operations'\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: 'center',\r\n    //justifyContent: \"spaceBetween\",\r\n  },\r\n  email: {\r\n    //display: 'block',\r\n    fontWeight: 700,\r\n    marginRight: 10,\r\n\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ email, onLogout, }) => (\r\n  <div style={styles.container}>\r\n    <span style={styles.email}>{email}</span>\r\n    <button type='button' onClick={onLogout}>Logout</button>\r\n  </div>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  email: authSelectors.getCurrentEmail(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\n\r\nconst\r\nAuthNav = () => (\r\n    <div>\r\n        <NavLink\r\n            to='/register'\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n        >\r\n            Регистрация\r\n            </NavLink>\r\n        <NavLink\r\n            to='/login'\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n        >\r\n            Логин\r\n            </NavLink>\r\n\r\n\r\n    </div>\r\n    )\r\n\r\n    export default AuthNav","import Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport authSelectors from '..//../redux/auth/auth-selectors'\r\nimport { connect } from 'react-redux';\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n//const mapDispatchToProps\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '..//../redux/auth/auth-selectors'\r\n\r\n\r\nconst PrivateRouter = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route {...routeProps} render={props => isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo}/>} />\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRouter)","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '..//../redux/auth/auth-selectors'\r\n\r\n\r\nconst PublikRouter = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route {...routeProps} render={props => isAuthenticated && routeProps.restricted ? <Redirect to={redirectTo} /> : <Component {...props} />} />\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(PublikRouter)","import React, {Component, lazy, Suspense} from 'react';\nimport { Route, Switch } from 'react-router';\n//import Phonebook from './components/Phonebook/Phonebook';\nimport AppBar from './components/UserMenu/AppBar';\n//import HomeView from './views/HomeView';\n//import RegisterView from './views/RegisterViews';\n//import LoginView from './views/LoginViews';\nimport PrivateRoute from './components/UserMenu/PrivateRouter';\nimport PublikRouter from './components/UserMenu/PublikRouter';\n//import ContactsView from './views/ContactsView';\nimport authOperations from './redux/auth/auth-operations';\nimport { connect } from 'react-redux';\n\n//const AsyncComponent = lazy(() => import('./AsyncComponent'));\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterViews'));\nconst LoginView = lazy(() => import('./views/LoginViews'))\nconst ContactsView = lazy(()=>import('./views/ContactsView'))\n//<Suspense fallback={<div>Завантаження...</div>}>\nclass App extends Component{\n\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback= {<div>Завантаження...</div>}>\n    <Switch>\n      <Route exact path=\"/\" component={HomeView} />\n    <PublikRouter path=\"/register\" restricted component={RegisterView} redirectTo={\"/contacts\"}/>\n    <PublikRouter path=\"/login\" restricted component={LoginView} redirectTo={\"/contacts\"} />\n      <PrivateRoute path=\"/contacts\" component={ContactsView} redirectTo={\"/login\"} />\n          </Switch>\n       </Suspense>\n    </>\n    )\n  }\n}\n\n// const App = () => (\n//   <>\n//     <AppBar />\n//     <Switch>\n//       <Route exact path=\"/\" component={HomeView} />\n//     <Route path=\"/register\" component={RegisterView} />\n//     <Route path=\"/login\" component={LoginView} />\n//       <Route path=\"/contacts\" component={ContactsView} />\n//       </Switch>\n//     </>\n  // <div>\n  //   <Phonebook />\n  // </div>\n//);\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n}\n\nexport default connect(null,mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n       </PersistGate>\n</Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(\n \n//     <Provider store={store.store}>\n//     <PersistGate loading={null} persistor={store.persistor}>\n//       <BrowserRouter>\n//         <App />\n//       </BrowserRouter>\n//     </PersistGate>\n      \n//     </Provider>,\n \n//   document.getElementById('root'),\n// );\n"],"sourceRoot":""}