{"version":3,"sources":["components/ContactForm/contactForm.module.css","components/Filter/filter.module.css","components/ContactList/contactList.module.css","redux/phonebook/operations.js","components/ContactForm/ContactForm.js","redux/phonebook/selectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsView.js"],"names":["module","exports","data","dispatch","addContactRequest","axios","post","then","addContactSuccess","catch","error","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fatchContactRequest","get","fatchContactSuccess","fatchContactError","ContactForm","state","name","number","handleChenge","e","currentTarget","value","setState","handleInputChange","preventDefault","props","onSubmit","reset","className","styles","this","inputForm","type","onChange","pattern","required","React","Component","connect","operations","getFilter","contacts","filter","gatFilteredList","createSelector","items","normalizedFilter","toLowerCase","item","includes","chengeFilter","inputFilter","onDeteteContact","map","contactListItem","deleteButton","onClick","ContactsView","onFatchContacts"],"mappings":"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","file":"static/js/3.637e3306.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"contactForm_ContactForm__m6mlS\",\"inputForm\":\"contactForm_inputForm__12Www\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"filter_inputFilter__3XtFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactList_contactListItem__2FBfr\",\"deleteButton\":\"contactList_deleteButton__1clnG\"};","import axios from 'axios'; \r\nimport {addContactRequest,\r\n    addContactSuccess,\r\n    addContactError, deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fatchContactRequest,\r\n    fatchContactSuccess,\r\n    fatchContactError\r\n} from './actions';\r\n\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3000'\r\n\r\nconst fatchContact = () => dispatch => {\r\n    dispatch(fatchContactRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fatchContactSuccess(data)))\r\n        .catch(error => dispatch(fatchContactError(error)))\r\n};\r\n\r\n\r\nconst addContact = data => dispatch => {\r\n    dispatch(addContactRequest());\r\n    \r\n\r\n    axios\r\n        .post('/contacts', data)\r\n        .then(({ data }) => dispatch(addContactSuccess(data) ))\r\n        .catch(error => dispatch(addContactError(error)))\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error)))\r\n  \r\n};\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    addContact,\r\n    deleteContact,\r\n    fatchContact\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport operations from '..//../redux/phonebook/operations'\r\n// import shortid from 'shortid';\r\nimport styles from '../ContactForm/contactForm.module.css';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    // id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChenge = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value,  });\r\n  };\r\n  //id: shortid.generate()\r\n  handleInputChange = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', id: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={styles.ContactForm} onSubmit={this.handleInputChange}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className={styles.inputForm}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChenge}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className={styles.inputForm}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChenge}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(operations.addContact(data))\r\n})\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import {createSelector} from '@reduxjs/toolkit'\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nconst allItems = state => state.contacts.items;\r\n\r\nexport const gatFilteredList = createSelector(\r\n     [allItems, getFilter],\r\n    (items, filter) =>\r\n     { const normalizedFilter = filter.toLowerCase()\r\n\r\n  return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedFilter))}\r\n)\r\n\r\n// export const gatFilteredList = state => {\r\n//     const filter = getFilter(state);\r\n//     const items = allItems(state);\r\n    \r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return items.filter(item =>\r\n//       item.name.toLowerCase().includes(normalizedFilter))\r\n    \r\n// }","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from '../Filter/filter.module.css';\r\nimport {chengeFilter} from '..//../redux/phonebook/actions'\r\nimport PropTypes from 'prop-types';\r\nimport {getFilter} from '../../redux/phonebook/selectors'\r\n\r\nconst Filter = ({ filter, handleChenge }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.inputFilter}\r\n      type=\"text\"\r\n      // name=\"name\"\r\n      value={filter}\r\n      onChange={handleChenge}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      required\r\n    />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n    handleChenge: PropTypes.func,\r\n};\r\n \r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChenge: (e) => dispatch(chengeFilter(e.currentTarget.value)),\r\n});\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport operations from '..//../redux/phonebook/operations';\r\nimport styles from '../ContactList/contactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport {gatFilteredList} from '../../redux/phonebook/selectors'\r\nconst ContactList = ({ contacts, onDeteteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={styles.contactListItem} key={id}>\r\n        <span>\r\n          {name}:{number}\r\n        </span>\r\n\r\n        <button\r\n          className={styles.deleteButton}\r\n          onClick={() => onDeteteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  })),\r\n  onDeteteContact: PropTypes.func,\r\n};\r\n\r\n// const gatFilteredList = (allItems, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return allItems.filter(item =>\r\n//       item.name.toLowerCase().includes(normalizedFilter),\r\n//   ); \r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: gatFilteredList(state)\r\n\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeteteContact: (id) => dispatch(operations.deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","\r\nimport React, { Component } from 'react';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport Filter from '../components/Filter/Filter';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport operations from '../redux/phonebook/operations'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.onFatchContacts();\r\n  }\r\n  render() {\r\n    // const { isError } = this.props;\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n         <ContactForm />\r\n\r\n        <Filter />\r\n        {/* {this.props.isLoadingContacts && (\r\n          <SpinnerComponent loading={true} position=\"global\" />\r\n        )} */}\r\n         <h2>Contacts</h2>\r\n          {/* {isError && <h2>{isError}</h2>} */}\r\n        <ContactList />\r\n\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFatchContacts: () => dispatch(operations.fatchContact())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}